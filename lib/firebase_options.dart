// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:firebase_database/firebase_database.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBM7FhyfwD2vlrPgPJ-GwDpDq0F5VymmnU',
    appId: '1:796003094054:ios:71463bf11c7223c54760e7',
    messagingSenderId: '796003094054',
    projectId: 'vlogger-57c93',
    storageBucket: 'vlogger-57c93.firebasestorage.app',
    iosBundleId: 'com.example.vlogger',
    databaseURL: 'https://vlogger-57c93-default-rtdb.firebaseio.com/',
  );
}

void testFriendRequestsRead() async {
  final db = FirebaseDatabase.instance.ref();
  try {
    final snapshot = await db.child('friendRequests').orderByChild('toUserId').equalTo('Mxiilg8ssaX0mxnkw9uWjFECVOa2').get();
    print('FRIEND REQUESTS TEST: ${snapshot.value}');
  } catch (e) {
    print('FRIEND REQUESTS TEST ERROR: $e');
  }
}
